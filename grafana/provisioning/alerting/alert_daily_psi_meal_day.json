{
    "apiVersion": 1,
    "groups": [
        {
            "orgId": 1,
            "name": "daily_psi_meal_day",
            "folder": "alerting",
            "interval": "1m",
            "rules": [
                {
                    "uid": "bel08jashqy2of",
                    "title": "daily_psi_meal_day",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "PCC52D03280B7034C",
                            "model": {
                                "editorMode": "code",
                                "format": "table",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "rawQuery": true,
                                "rawSql": "WITH training AS (\n  SELECT \n    1.0 * SUM(CASE WHEN day not in (1, 7) THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS expected_weekday,\n    1.0 * SUM(CASE WHEN day in (1, 7) THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS expected_weekend\n  FROM training_data\n),\npred AS (\n  SELECT \n    1.0 * SUM(CASE WHEN day not in ('Sun', 'Sat') THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS actual_weekday,\n    1.0 * SUM(CASE WHEN day in ('Sun', 'Sat') THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS actual_weekend\n  FROM predictions\n  WHERE predicted_at AT TIME ZONE 'Europe/Paris' >= now() - interval '1 day'\n),\npsi_calc AS (\n  SELECT\n    -- Avoid division by zero and log of zero with CASE WHEN\n    CASE \n      WHEN expected_weekday > 0 AND actual_weekday > 0 \n      THEN (actual_weekday - expected_weekday) * LN(actual_weekday / expected_weekday)\n      ELSE 0 \n    END AS psi_weekday,\n    \n    CASE \n      WHEN expected_weekend > 0 AND actual_weekend > 0 \n      THEN (actual_weekend - expected_weekend) * LN(actual_weekend / expected_weekend)\n      ELSE 0 \n    END AS psi_weekend\n  FROM training, pred\n)\nSELECT \n  psi_weekday + psi_weekend AS total_psi\nFROM psi_calc;",
                                "refId": "A",
                                "sql": {
                                    "columns": [
                                        {
                                            "parameters": [],
                                            "type": "function"
                                        }
                                    ],
                                    "groupBy": [
                                        {
                                            "property": {
                                                "type": "string"
                                            },
                                            "type": "groupBy"
                                        }
                                    ],
                                    "limit": 50
                                }
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                -2.8
                                            ],
                                            "type": "gte"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "1m",
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "ms_team_channel_tip_prediction"
                    }
                }
            ]
        }
    ]
}